{"version":3,"file":"FetchApi-service.js","sourceRoot":"","sources":["../../../../src/app/services/FetchApi-service.ts"],"names":[],"mappings":"AAAA,MAAM,OAAO,QAAQ;IACpB,gBAAuB,CAAC;IAEjB,MAAM,CAAC,KAAK,CAAC,gBAAgB,CACnC,GAAW,EACX,MAAU,EACV,SAAiB,KAAK,EACtB,IAAa,EACb,OAAgC,EAChC,kBAA4B;QAE5B,MAAM,OAAO,GAKT;YACH,MAAM;YACN,OAAO;SACP,CAAC;QAEF,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,SAAS,EAAE,CAAC;YACzC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC;QACrB,CAAC;QAED,IAAI,kBAAkB,EAAE,CAAC;YACxB,OAAO,CAAC,WAAW,GAAG,SAAS,CAAC;QACjC,CAAC;QAED,IAAI,CAAC;YACJ,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;YAE3C,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,CAAC;gBAClB,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;gBACnC,OAAO,OAAO,CAAC,OAAO,CAAC,MAAW,CAAC,CAAC;YACrC,CAAC;YAED,OAAO,QAAQ,CAAC,IAAI,EAAgB,CAAC;QACtC,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YAChB,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACtB,CAAC;QAED,OAAO,OAAO,CAAC,OAAO,CAAC,MAAW,CAAC,CAAC;IACrC,CAAC;CACD","sourcesContent":["export class FetchApi {\n\tprivate constructor() {}\n\n\tpublic static async fetchApiResponse<T>(\n\t\turl: string,\n\t\tresult?: T,\n\t\tmethod: string = \"GET\",\n\t\tbody?: string,\n\t\theaders?: Record<string, string>,\n\t\tincludeCredentials?: boolean\n\t): Promise<T> {\n\t\tconst options: {\n\t\t\tmethod: string;\n\t\t\tbody?: string;\n\t\t\theaders?: Record<string, string>;\n\t\t\tcredentials?: RequestCredentials;\n\t\t} = {\n\t\t\tmethod,\n\t\t\theaders\n\t\t};\n\n\t\tif (body !== null && body !== undefined) {\n\t\t\toptions.body = body;\n\t\t}\n\t\t\n\t\tif (includeCredentials) {\n\t\t\toptions.credentials = 'include';\n\t\t}\n\n\t\ttry {\n\t\t\tconst response = await fetch(url, options);\n\n\t\t\tif (!response.ok) {\n\t\t\t\tconsole.error(response.statusText);\n\t\t\t\treturn Promise.resolve(result as T);\n\t\t\t}\n\n\t\t\treturn response.json() as Promise<T>;\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t}\n\n\t\treturn Promise.resolve(result as T);\n\t}\n}\n"]}